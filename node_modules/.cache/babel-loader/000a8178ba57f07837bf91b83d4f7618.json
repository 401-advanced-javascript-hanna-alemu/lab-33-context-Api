{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\hanna\\\\codefellows\\\\401\\\\lab-33-context-Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\hanna\\\\codefellows\\\\401\\\\lab-33-context-Api\\\\src\\\\contexts\\\\counter-provider-context.js\";\nimport React, { createContext, Component } from 'react';\nexport const CounterContext = createContext();\n\nclass CounterContextProvider extends Component {\n  constructor() {\n    super();\n\n    this.increment = () => {\n      this.setState({\n        count: this.count + 1\n      });\n    };\n\n    this.decrement = () => {\n      this.setState({\n        count: thiscount - 1\n      });\n    };\n\n    this.state = {\n      count: 0,\n      increment: this.increment,\n      decrement: this.decrement\n    };\n  }\n\n  render() {\n    return (//Hanna - the value listed below is the data thats going to be passed to whatever the provider wraps later\n      //Hanna - this refers to the children that the provider wraps\n      React.createElement(CounterContext.Provider, {\n        value: _objectSpread({}, this.state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.children)\n    );\n  }\n\n}\n\nexport default CounterContextProvider;","map":{"version":3,"sources":["C:\\Users\\hanna\\codefellows\\401\\lab-33-context-Api\\src\\contexts\\counter-provider-context.js"],"names":["React","createContext","Component","CounterContext","CounterContextProvider","constructor","increment","setState","count","decrement","thiscount","state","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,cAAc,GAAGF,aAAa,EAApC;;AAEP,MAAMG,sBAAN,SAAqCF,SAArC,CAA+C;AAC3CG,EAAAA,WAAW,GAAG;AACV;;AADU,SASdC,SATc,GASF,MAAM;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,KAAKA,KAAL,GAAa;AAAtB,OAAd;AAEH,KAZa;;AAAA,SAcdC,SAdc,GAcF,MAAM;AACd,WAAKF,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEE,SAAS,GAAG;AAArB,OAAd;AAEH,KAjBa;;AAEV,SAAKC,KAAL,GAAa;AACTH,MAAAA,KAAK,EAAG,CADC;AAETF,MAAAA,SAAS,EAAG,KAAKA,SAFR;AAGTG,MAAAA,SAAS,EAAG,KAAKA;AAHR,KAAb;AAKH;;AAYDG,EAAAA,MAAM,GAAG;AACL,WACR;AACA;AACgB,0BAAC,cAAD,CAAgB,QAAhB;AAAyB,QAAA,KAAK,oBAAO,KAAKD,KAAZ,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKE,KAAL,CAAWC,QADhB;AAHR;AAOC;;AA5BsC;;AAgC/C,eAAeV,sBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\r\n\r\nexport const CounterContext = createContext();\r\n\r\nclass CounterContextProvider extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            count : 0,\r\n            increment : this.increment,\r\n            decrement : this.decrement\r\n        }\r\n    }\r\n\r\n    increment = () => {\r\n        this.setState({ count: this.count + 1 });\r\n\r\n    }\r\n\r\n    decrement = () => {\r\n        this.setState({ count: thiscount - 1 });\r\n\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n//Hanna - the value listed below is the data thats going to be passed to whatever the provider wraps later\r\n//Hanna - this refers to the children that the provider wraps\r\n                <CounterContext.Provider value={ {...this.state} }>\r\n                    {this.props.children}\r\n                </CounterContext.Provider>\r\n            );\r\n        }\r\n    \r\n}\r\n\r\nexport default CounterContextProvider;"]},"metadata":{},"sourceType":"module"}