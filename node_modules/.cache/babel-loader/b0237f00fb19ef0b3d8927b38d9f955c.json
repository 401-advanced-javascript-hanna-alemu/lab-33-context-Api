{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\hanna\\\\codefellows\\\\401\\\\lab-33-context-Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\hanna\\\\codefellows\\\\401\\\\lab-33-context-Api\\\\src\\\\contexts\\\\counter-provider-context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, Component } from 'react';\nexport const CounterContext = createContext();\n\nclass CounterContextProvider extends Component {\n  constructor() {\n    super();\n\n    this.increment = () => {\n      this.setState(oldstate => ({\n        count: oldstate.couter + 1\n      }));\n    };\n\n    this.decrement = () => {\n      this.setState({\n        count: this.count - 1\n      });\n    };\n\n    this.state = {\n      count: 0,\n      increment: this.increment,\n      decrement: this.decrement\n    };\n  }\n\n  render() {\n    return (//Hanna - the value listed below is the data thats going to be passed to whatever the provider wraps later\n      //Hanna - this refers to the children that the provider wraps\n      React.createElement(CounterContext.Provider, {\n        value: _objectSpread({}, this.state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.children)\n    );\n  }\n\n}\n\nexport default CounterContextProvider;","map":{"version":3,"sources":["C:\\Users\\hanna\\codefellows\\401\\lab-33-context-Api\\src\\contexts\\counter-provider-context.js"],"names":["React","createContext","Component","CounterContext","CounterContextProvider","constructor","increment","setState","oldstate","count","couter","decrement","state","render","props","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,cAAc,GAAGF,aAAa,EAApC;;AAEP,MAAMG,sBAAN,SAAqCF,SAArC,CAA+C;AAC3CG,EAAAA,WAAW,GAAG;AACV;;AADU,SASdC,SATc,GASF,MAAM;AACd,WAAKC,QAAL,CAAcC,QAAQ,KAAI;AAAEC,QAAAA,KAAK,EAAED,QAAQ,CAACE,MAAT,GAAkB;AAA3B,OAAJ,CAAtB;AAEH,KAZa;;AAAA,SAcdC,SAdc,GAcF,MAAM;AACd,WAAKJ,QAAL,CAAc;AAAEE,QAAAA,KAAK,EAAE,KAAKA,KAAL,GAAa;AAAtB,OAAd;AAEH,KAjBa;;AAEV,SAAKG,KAAL,GAAa;AACTH,MAAAA,KAAK,EAAG,CADC;AAETH,MAAAA,SAAS,EAAG,KAAKA,SAFR;AAGTK,MAAAA,SAAS,EAAG,KAAKA;AAHR,KAAb;AAKH;;AAYDE,EAAAA,MAAM,GAAG;AACL,WACR;AACA;AACgB,0BAAC,cAAD,CAAgB,QAAhB;AAAyB,QAAA,KAAK,oBAAO,KAAKD,KAAZ,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKE,KAAL,CAAWC,QADhB;AAHR;AAOC;;AA5BsC;;AAgC/C,eAAeX,sBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\r\n\r\nexport const CounterContext = createContext();\r\n\r\nclass CounterContextProvider extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            count : 0,\r\n            increment : this.increment,\r\n            decrement : this.decrement\r\n        }\r\n    }\r\n\r\n    increment = () => {\r\n        this.setState(oldstate =>({ count: oldstate.couter + 1 }));\r\n\r\n    }\r\n\r\n    decrement = () => {\r\n        this.setState({ count: this.count - 1 });\r\n\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n//Hanna - the value listed below is the data thats going to be passed to whatever the provider wraps later\r\n//Hanna - this refers to the children that the provider wraps\r\n                <CounterContext.Provider value={ {...this.state} }>\r\n                    {this.props.children}\r\n                </CounterContext.Provider>\r\n            );\r\n        }\r\n    \r\n}\r\n\r\nexport default CounterContextProvider;"]},"metadata":{},"sourceType":"module"}